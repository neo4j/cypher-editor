import { ATN } from "antlr4ts/atn/ATN";
import { CharStream } from "antlr4ts/CharStream";
import { Lexer } from "antlr4ts/Lexer";
import { Vocabulary } from "antlr4ts/Vocabulary";
export declare class CypherLexer extends Lexer {
    static readonly T__0 = 1;
    static readonly T__1 = 2;
    static readonly T__2 = 3;
    static readonly T__3 = 4;
    static readonly T__4 = 5;
    static readonly T__5 = 6;
    static readonly T__6 = 7;
    static readonly T__7 = 8;
    static readonly T__8 = 9;
    static readonly T__9 = 10;
    static readonly T__10 = 11;
    static readonly T__11 = 12;
    static readonly T__12 = 13;
    static readonly T__13 = 14;
    static readonly T__14 = 15;
    static readonly T__15 = 16;
    static readonly T__16 = 17;
    static readonly T__17 = 18;
    static readonly T__18 = 19;
    static readonly T__19 = 20;
    static readonly T__20 = 21;
    static readonly T__21 = 22;
    static readonly T__22 = 23;
    static readonly T__23 = 24;
    static readonly T__24 = 25;
    static readonly T__25 = 26;
    static readonly T__26 = 27;
    static readonly T__27 = 28;
    static readonly T__28 = 29;
    static readonly T__29 = 30;
    static readonly T__30 = 31;
    static readonly T__31 = 32;
    static readonly T__32 = 33;
    static readonly T__33 = 34;
    static readonly T__34 = 35;
    static readonly T__35 = 36;
    static readonly T__36 = 37;
    static readonly T__37 = 38;
    static readonly T__38 = 39;
    static readonly T__39 = 40;
    static readonly T__40 = 41;
    static readonly T__41 = 42;
    static readonly T__42 = 43;
    static readonly T__43 = 44;
    static readonly T__44 = 45;
    static readonly T__45 = 46;
    static readonly T__46 = 47;
    static readonly T__47 = 48;
    static readonly T__48 = 49;
    static readonly T__49 = 50;
    static readonly T__50 = 51;
    static readonly T__51 = 52;
    static readonly T__52 = 53;
    static readonly CYPHER = 54;
    static readonly EXPLAIN = 55;
    static readonly PROFILE = 56;
    static readonly USING = 57;
    static readonly PERIODIC = 58;
    static readonly COMMIT = 59;
    static readonly UNION = 60;
    static readonly ALL = 61;
    static readonly CREATE = 62;
    static readonly DROP = 63;
    static readonly INDEX = 64;
    static readonly ON = 65;
    static readonly CONSTRAINT = 66;
    static readonly ASSERT = 67;
    static readonly IS = 68;
    static readonly UNIQUE = 69;
    static readonly EXISTS = 70;
    static readonly LOAD = 71;
    static readonly CSV = 72;
    static readonly WITH = 73;
    static readonly HEADERS = 74;
    static readonly FROM = 75;
    static readonly AS = 76;
    static readonly FIELDTERMINATOR = 77;
    static readonly OPTIONAL = 78;
    static readonly MATCH = 79;
    static readonly UNWIND = 80;
    static readonly MERGE = 81;
    static readonly SET = 82;
    static readonly DETACH = 83;
    static readonly DELETE = 84;
    static readonly REMOVE = 85;
    static readonly FOREACH = 86;
    static readonly IN = 87;
    static readonly DISTINCT = 88;
    static readonly RETURN = 89;
    static readonly ORDER = 90;
    static readonly BY = 91;
    static readonly L_SKIP = 92;
    static readonly LIMIT = 93;
    static readonly ASCENDING = 94;
    static readonly ASC = 95;
    static readonly DESCENDING = 96;
    static readonly DESC = 97;
    static readonly JOIN = 98;
    static readonly SCAN = 99;
    static readonly START = 100;
    static readonly NODE = 101;
    static readonly RELATIONSHIP = 102;
    static readonly REL = 103;
    static readonly WHERE = 104;
    static readonly SHORTESTPATH = 105;
    static readonly ALLSHORTESTPATHS = 106;
    static readonly OR = 107;
    static readonly XOR = 108;
    static readonly AND = 109;
    static readonly NOT = 110;
    static readonly STARTS = 111;
    static readonly ENDS = 112;
    static readonly CONTAINS = 113;
    static readonly NULL = 114;
    static readonly COUNT = 115;
    static readonly FILTER = 116;
    static readonly EXTRACT = 117;
    static readonly ANY = 118;
    static readonly NONE = 119;
    static readonly SINGLE = 120;
    static readonly TRUE = 121;
    static readonly FALSE = 122;
    static readonly REDUCE = 123;
    static readonly CASE = 124;
    static readonly ELSE = 125;
    static readonly END = 126;
    static readonly WHEN = 127;
    static readonly THEN = 128;
    static readonly CALL = 129;
    static readonly YIELD = 130;
    static readonly KEY = 131;
    static readonly CATALOG = 132;
    static readonly SHOW = 133;
    static readonly DEFAULT = 134;
    static readonly DBMS = 135;
    static readonly DATABASE = 136;
    static readonly DATABASES = 137;
    static readonly GRAPH = 138;
    static readonly GRAPHS = 139;
    static readonly REPLACE = 140;
    static readonly IF = 141;
    static readonly STOP = 142;
    static readonly ROLE = 143;
    static readonly ROLES = 144;
    static readonly USER = 145;
    static readonly USERS = 146;
    static readonly POPULATED = 147;
    static readonly PASSWORD = 148;
    static readonly CHANGE = 149;
    static readonly REQUIRED = 150;
    static readonly STATUS = 151;
    static readonly ACTIVE = 152;
    static readonly SUSPENDED = 153;
    static readonly ALTER = 154;
    static readonly CURRENT = 155;
    static readonly TO = 156;
    static readonly PRIVILEGES = 157;
    static readonly GRANT = 158;
    static readonly DENY = 159;
    static readonly REVOKE = 160;
    static readonly RELATIONSHIPS = 161;
    static readonly NODES = 162;
    static readonly ELEMENT = 163;
    static readonly ELEMENTS = 164;
    static readonly COPY = 165;
    static readonly OF = 166;
    static readonly TRAVERSE = 167;
    static readonly READ = 168;
    static readonly WRITE = 169;
    static readonly ACCESS = 170;
    static readonly INDEXES = 171;
    static readonly MANAGEMENT = 172;
    static readonly NEW = 173;
    static readonly LABEL = 174;
    static readonly LABELS = 175;
    static readonly NAME = 176;
    static readonly NAMES = 177;
    static readonly TYPE = 178;
    static readonly TYPES = 179;
    static readonly PROPERTY = 180;
    static readonly CONSTRAINTS = 181;
    static readonly ASSIGN = 182;
    static readonly BTREE = 183;
    static readonly EXIST = 184;
    static readonly FOR = 185;
    static readonly OPTIONS = 186;
    static readonly EXECUTE = 187;
    static readonly DEFINED = 188;
    static readonly FUNCTION = 189;
    static readonly FUNCTIONS = 190;
    static readonly BOOSTED = 191;
    static readonly PROCEDURE = 192;
    static readonly PROCEDURES = 193;
    static readonly ADMIN = 194;
    static readonly ADMINISTRATOR = 195;
    static readonly BRIEF = 196;
    static readonly VERBOSE = 197;
    static readonly OUTPUT = 198;
    static readonly StringLiteral = 199;
    static readonly UrlHex = 200;
    static readonly EscapedChar = 201;
    static readonly HexInteger = 202;
    static readonly DecimalInteger = 203;
    static readonly OctalInteger = 204;
    static readonly HexLetter = 205;
    static readonly HexDigit = 206;
    static readonly Digit = 207;
    static readonly NonZeroDigit = 208;
    static readonly NonZeroOctDigit = 209;
    static readonly OctDigit = 210;
    static readonly ZeroDigit = 211;
    static readonly ExponentDecimalReal = 212;
    static readonly RegularDecimalReal = 213;
    static readonly UnescapedSymbolicName = 214;
    static readonly IdentifierStart = 215;
    static readonly IdentifierPart = 216;
    static readonly EscapedSymbolicName = 217;
    static readonly SP = 218;
    static readonly WHITESPACE = 219;
    static readonly Comment = 220;
    static readonly ERROR_TOKEN = 221;
    static readonly channelNames: string[];
    static readonly modeNames: string[];
    static readonly ruleNames: string[];
    private static readonly _LITERAL_NAMES;
    private static readonly _SYMBOLIC_NAMES;
    static readonly VOCABULARY: Vocabulary;
    get vocabulary(): Vocabulary;
    constructor(input: CharStream);
    get grammarFileName(): string;
    get ruleNames(): string[];
    get serializedATN(): string;
    get channelNames(): string[];
    get modeNames(): string[];
    private static readonly _serializedATNSegments;
    private static readonly _serializedATNSegment0;
    private static readonly _serializedATNSegment1;
    private static readonly _serializedATNSegment2;
    private static readonly _serializedATNSegment3;
    static readonly _serializedATN: string;
    static __ATN: ATN;
    static get _ATN(): ATN;
}
